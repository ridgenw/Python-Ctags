!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FIELD_DESCRIPTION!VHDL	architecture	/architecture designing the entity/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!VHDL	A,alias	/aliases/
!_TAG_KIND_DESCRIPTION!VHDL	P,package	/package definitions/
!_TAG_KIND_DESCRIPTION!VHDL	Q,process	/processes/
!_TAG_KIND_DESCRIPTION!VHDL	T,subtype	/subtype definitions/
!_TAG_KIND_DESCRIPTION!VHDL	a,architecture	/architectures/
!_TAG_KIND_DESCRIPTION!VHDL	c,constant	/constant declarations/
!_TAG_KIND_DESCRIPTION!VHDL	e,entity	/entity declarations/
!_TAG_KIND_DESCRIPTION!VHDL	f,function	/function prototypes and declarations/
!_TAG_KIND_DESCRIPTION!VHDL	g,generic	/generic declarations/
!_TAG_KIND_DESCRIPTION!VHDL	p,procedure	/procedure prototypes and declarations/
!_TAG_KIND_DESCRIPTION!VHDL	q,port	/port declarations/
!_TAG_KIND_DESCRIPTION!VHDL	r,record	/record names/
!_TAG_KIND_DESCRIPTION!VHDL	s,signal	/signal declarations/
!_TAG_KIND_DESCRIPTION!VHDL	t,type	/type definitions/
!_TAG_KIND_DESCRIPTION!VHDL	v,variable	/variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/ridgewilliams/Developer/VSCode/Python/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
!_TAG_ROLE_DESCRIPTION!VHDL!entity	desigend	/designed by an architecture/
ASCII	project_files/cpu_trace.vhd	/^	FUNCTION ASCII(c : CHARACTER) return STD_LOGIC_VECTOR is$/;"	f	architecture:cpu_trace.RTL
BTN1	project_files/IceBreaker_top.vhd	/^		BTN1		: IN	STD_LOGIC;	-- PMOD2 BTN 1 = PAUSE button$/;"	q	entity:IceBreaker_top
BTN2	project_files/IceBreaker_top.vhd	/^		BTN2		: IN	STD_LOGIC;	-- PMOD2 BTN 2 =$/;"	q	entity:IceBreaker_top
BTN3	project_files/IceBreaker_top.vhd	/^		BTN3		: IN	STD_LOGIC	-- PMOD2 BTN 3 =$/;"	q	entity:IceBreaker_top
BTN_N	project_files/IceBreaker_top.vhd	/^		BTN_N		: IN	STD_LOGIC;	-- RESET button$/;"	q	entity:IceBreaker_top
Behavioural	project_files/system_tb.vhd	/^ARCHITECTURE Behavioural OF system_tb IS$/;"	a	entity:system_tb
CT_DONE	project_files/cpu_trace.vhd	/^	constant CT_DONE: STD_LOGIC_VECTOR(7 downto 0) := "11110000";$/;"	c	architecture:cpu_trace.RTL
CT_PRINT	project_files/cpu_trace.vhd	/^	constant CT_PRINT: STD_LOGIC_VECTOR(7 downto 0) := "10001000";$/;"	c	architecture:cpu_trace.RTL
CT_PRINT_BIT	project_files/cpu_trace.vhd	/^	function CT_PRINT_BIT(n: INTEGER RANGE 0 to 7) return STD_LOGIC_VECTOR is$/;"	f	architecture:cpu_trace.RTL
CT_PRINT_IF_OP	project_files/cpu_trace.vhd	/^	function CT_PRINT_IF_OP(n: INTEGER RANGE 0 to 15) return STD_LOGIC_VECTOR is$/;"	f	architecture:cpu_trace.RTL
CT_PRINT_IF_SET	project_files/cpu_trace.vhd	/^	function CT_PRINT_IF_SET(n: INTEGER RANGE 0 to 7) return STD_LOGIC_VECTOR is$/;"	f	architecture:cpu_trace.RTL
CT_PRINT_TCYC	project_files/cpu_trace.vhd	/^	constant CT_PRINT_TCYC: STD_LOGIC_VECTOR(7 downto 0) := "10010000";$/;"	c	architecture:cpu_trace.RTL
CT_SEL_REG	project_files/cpu_trace.vhd	/^	function CT_SEL_REG(n: INTEGER RANGE 0 to 15) return STD_LOGIC_VECTOR is$/;"	f	architecture:cpu_trace.RTL
C_AUTOBAUD	project_files/IceBreaker_top.vhd	/^		C_AUTOBAUD		:	boolean := false;		-- use RX bit interval to set baud rate	(type 'U' for best re/;"	g	entity:IceBreaker_top
C_AUTOBAUD	project_files/MicrowavemontFPGA_top.vhd	/^		C_AUTOBAUD:		boolean	:= false			-- use RX bit interval to set baud rate	(type 'U' for best res/;"	g	entity:Microwavemont_top
C_AUTOBAUD	project_files/TinyFPGA_top.vhd	/^		C_AUTOBAUD	:	boolean := true			-- use RX bit interval to set baud rate	(type 'U' for best resu/;"	g	entity:TinyFPGA_top
C_AUTOBAUD	project_files/system.vhd	/^		C_AUTOBAUD	:	boolean := false;		-- use RX bit interval to set baud rate$/;"	g	entity:system
C_AUTOBAUD	project_files/tx_uart.vhd	/^		C_AUTOBAUD:  boolean := false$/;"	g	entity:tx_uart
C_BPS	project_files/IceBreaker_top.vhd	/^		C_BPS			:	integer := 115_200;		-- initial baud rate										$/;"	g	entity:IceBreaker_top
C_BPS	project_files/MicrowavemontFPGA_top.vhd	/^		C_BPS:			integer := 9600;$/;"	g	entity:Microwavemont_top
C_BPS	project_files/system.vhd	/^		C_BPS		:	integer := 9600;$/;"	g	entity:system
C_BPS	project_files/tx_uart.vhd	/^		C_BPS:	integer := 9600;					-- UART transmition rate in bits per second (aka baud)$/;"	g	entity:tx_uart
C_PMOD1A_7SEG	project_files/IceBreaker_top.vhd	/^		C_PMOD1A_7SEG	:	boolean	:= true;		-- IceBreaker 7-segment PMOD on port PMOD1A$/;"	g	entity:IceBreaker_top
C_PMOD1B_8LED	project_files/IceBreaker_top.vhd	/^		C_PMOD1B_8LED	:	boolean	:= true			-- 8-LED output PMOD on port PMOD1B (e.g., Digilent 8LD)$/;"	g	entity:IceBreaker_top
C_RESET_SKIP	project_files/cpu_trace.vhd	/^	constant C_RESET_SKIP: INTEGER := 56;$/;"	c	architecture:cpu_trace.RTL
C_SYSTEM_HZ	project_files/IceBreaker_top.vhd	/^		C_SYSTEM_HZ		:	integer	:= 12_000_000;	-- master clock (in Hz)$/;"	g	entity:IceBreaker_top
C_SYSTEM_HZ	project_files/MicrowavemontFPGA_top.vhd	/^		C_SYSTEM_HZ:	integer	:= 12_000_000;	-- master clock (in Hz)$/;"	g	entity:Microwavemont_top
C_SYSTEM_HZ	project_files/TinyFPGA_top.vhd	/^		C_SYSTEM_HZ:	integer	:= 19_000_000;	-- master clock (in Hz)$/;"	g	entity:TinyFPGA_top
C_SYSTEM_HZ	project_files/system.vhd	/^		C_SYSTEM_HZ	:	integer := 12_000_000;	-- master clock (in Hz)$/;"	g	entity:system
C_SYSTEM_HZ	project_files/system_tb.vhd	/^	constant C_SYSTEM_HZ:	integer := 1_000_000; -- master clock (in Hz)$/;"	c	architecture:system_tb.Behavioural
C_SYSTEM_HZ	project_files/tx_uart.vhd	/^		C_SYSTEM_HZ: integer := 12_000_000;		-- FPGA clock in Hz$/;"	g	entity:tx_uart
C_TARGET_HZ	project_files/IceBreaker_top.vhd	/^		C_TARGET_HZ		:	integer := 5;			-- speed of "slow" clock in Hz used by CPU$/;"	g	entity:IceBreaker_top
C_TARGET_HZ	project_files/MicrowavemontFPGA_top.vhd	/^		C_TARGET_HZ:	integer := 5;			-- speed of "slow" clock in Hz used by CPU$/;"	g	entity:Microwavemont_top
C_TARGET_HZ	project_files/TinyFPGA_top.vhd	/^		C_TARGET_HZ:	integer := 5;			-- speed of "slow" clock in Hz used by CPU$/;"	g	entity:TinyFPGA_top
C_TARGET_HZ	project_files/system_tb.vhd	/^	constant C_TARGET_HZ:	integer := 1_000_000;$/;"	c	architecture:system_tb.Behavioural
C_TRACE	project_files/system.vhd	/^		C_TRACE		:	boolean := true$/;"	g	entity:system
Digit	project_files/cpu.vhd	/^		variable Digit				: UNSIGNED(0 downto 0);$/;"	v	function:cpu.RTL.to_bin
Git_Repo	project_files/git_ctags_cmdline.py	/^def Git_Repo(url, cleanup = False):$/;"	f
Git_Repo	project_files/git_ctags_local.py	/^def Git_Repo(path, cleanup = False):$/;"	f
Git_Repo	project_files/git_ctags_vsc.py	/^def Git_Repo(url, cleanup = False):$/;"	f
IceBreaker_top	project_files/IceBreaker_top.vhd	/^ENTITY IceBreaker_top IS$/;"	e
LED1	project_files/IceBreaker_top.vhd	/^		LED1		: OUT	STD_LOGIC;	-- PMOD2 middle LED = CPU halt$/;"	q	entity:IceBreaker_top
LED2	project_files/IceBreaker_top.vhd	/^		LED2		: OUT	STD_LOGIC;	-- PMOD2 left LED = CPU halt$/;"	q	entity:IceBreaker_top
LED3	project_files/IceBreaker_top.vhd	/^		LED3		: OUT	STD_LOGIC;	-- PMOD2 right LED = CPU halt$/;"	q	entity:IceBreaker_top
LED4	project_files/IceBreaker_top.vhd	/^		LED4		: OUT	STD_LOGIC;	-- PMOD2 top LED = CPU halt$/;"	q	entity:IceBreaker_top
LED5	project_files/IceBreaker_top.vhd	/^		LED5		: OUT	STD_LOGIC;	-- PMOD2 bottom LED = CPU halt$/;"	q	entity:IceBreaker_top
LEDG_N	project_files/IceBreaker_top.vhd	/^		LEDG_N		: OUT	STD_LOGIC;	-- Green LED = CPU halt$/;"	q	entity:IceBreaker_top
LEDR_N	project_files/IceBreaker_top.vhd	/^		LEDR_N		: OUT	STD_LOGIC;	-- Red LED = CPU slow clock$/;"	q	entity:IceBreaker_top
Microwavemont_top	project_files/MicrowavemontFPGA_top.vhd	/^ENTITY Microwavemont_top IS$/;"	e
NOM_FREQ	project_files/TinyFPGA_top.vhd	/^		GENERIC (NOM_FREQ: string := "19.00");$/;"	g	component:TinyFPGA_top.RTL.OSCH
OSC	project_files/TinyFPGA_top.vhd	/^			OSC:		OUT std_logic;$/;"	q	component:TinyFPGA_top.RTL.OSCH
P1A1	project_files/IceBreaker_top.vhd	/^		P1A1		: OUT	STD_LOGIC;	-- PMOD1A (7-segment) $/;"	q	entity:IceBreaker_top
P1A10	project_files/IceBreaker_top.vhd	/^		P1A10		: OUT	STD_LOGIC;  $/;"	q	entity:IceBreaker_top
P1A2	project_files/IceBreaker_top.vhd	/^		P1A2		: OUT	STD_LOGIC;  $/;"	q	entity:IceBreaker_top
P1A3	project_files/IceBreaker_top.vhd	/^		P1A3		: OUT	STD_LOGIC;  $/;"	q	entity:IceBreaker_top
P1A4	project_files/IceBreaker_top.vhd	/^		P1A4		: OUT	STD_LOGIC;  $/;"	q	entity:IceBreaker_top
P1A7	project_files/IceBreaker_top.vhd	/^		P1A7		: OUT	STD_LOGIC;  $/;"	q	entity:IceBreaker_top
P1A8	project_files/IceBreaker_top.vhd	/^		P1A8		: OUT	STD_LOGIC;  $/;"	q	entity:IceBreaker_top
P1A9	project_files/IceBreaker_top.vhd	/^		P1A9		: OUT	STD_LOGIC;  $/;"	q	entity:IceBreaker_top
P1B1	project_files/IceBreaker_top.vhd	/^		P1B1		: OUT	STD_LOGIC;	--	PMOD1B (8 LEDs)$/;"	q	entity:IceBreaker_top
P1B10	project_files/IceBreaker_top.vhd	/^		P1B10		: OUT	STD_LOGIC;$/;"	q	entity:IceBreaker_top
P1B2	project_files/IceBreaker_top.vhd	/^		P1B2		: OUT	STD_LOGIC;$/;"	q	entity:IceBreaker_top
P1B3	project_files/IceBreaker_top.vhd	/^		P1B3		: OUT	STD_LOGIC;$/;"	q	entity:IceBreaker_top
P1B4	project_files/IceBreaker_top.vhd	/^		P1B4		: OUT	STD_LOGIC;$/;"	q	entity:IceBreaker_top
P1B7	project_files/IceBreaker_top.vhd	/^		P1B7		: OUT	STD_LOGIC;$/;"	q	entity:IceBreaker_top
P1B8	project_files/IceBreaker_top.vhd	/^		P1B8		: OUT	STD_LOGIC;$/;"	q	entity:IceBreaker_top
P1B9	project_files/IceBreaker_top.vhd	/^		P1B9		: OUT	STD_LOGIC;$/;"	q	entity:IceBreaker_top
PMOD_7Seg	project_files/IceBreaker_pmod_7seg.vhd	/^ENTITY PMOD_7Seg IS$/;"	e
RAM	project_files/ram.vhd	/^entity RAM is$/;"	e
ROM	project_files/cpu_trace.vhd	/^	signal ROM : rom_type :=$/;"	s	architecture:cpu_trace.RTL
RTL	project_files/IceBreaker_pmod_7seg.vhd	/^ARCHITECTURE RTL of PMOD_7Seg is$/;"	a	entity:PMOD_7Seg
RTL	project_files/IceBreaker_top.vhd	/^ARCHITECTURE RTL of IceBreaker_top is$/;"	a	entity:IceBreaker_top
RTL	project_files/MicrowavemontFPGA_top.vhd	/^ARCHITECTURE RTL of Microwavemont_top is$/;"	a	entity:Microwavemont_top
RTL	project_files/TinyFPGA_top.vhd	/^ARCHITECTURE RTL of TinyFPGA_top is$/;"	a	entity:TinyFPGA_top
RTL	project_files/cpu.vhd	/^ARCHITECTURE RTL OF cpu IS$/;"	a	entity:cpu
RTL	project_files/cpu_trace.vhd	/^ARCHITECTURE RTL OF cpu_trace IS$/;"	a	entity:cpu_trace
RTL	project_files/ram.vhd	/^architecture RTL of RAM is$/;"	a	entity:RAM
RTL	project_files/system.vhd	/^ARCHITECTURE RTL OF system IS$/;"	a	entity:system
RTL	project_files/tx_uart.vhd	/^architecture RTL of tx_uart is$/;"	a	entity:tx_uart
RX	project_files/IceBreaker_top.vhd	/^		RX			: IN	STD_LOGIC;	-- UART RX in (for CPU "trace" C_AUTOBAUD)$/;"	q	entity:IceBreaker_top
Result	project_files/cpu.vhd	/^		variable Result				: STRING(1 to 1);$/;"	v	function:cpu.RTL.to_bin
Result	project_files/cpu.vhd	/^		variable Result				: STRING(1 to integer(uslv'length));$/;"	v	function:cpu.RTL.to_bin
SEDSTDBY	project_files/TinyFPGA_top.vhd	/^			SEDSTDBY:	OUT std_logic$/;"	q	component:TinyFPGA_top.RTL.OSCH
STDBY	project_files/TinyFPGA_top.vhd	/^			STDBY:		IN	std_logic;$/;"	q	component:TinyFPGA_top.RTL.OSCH
TX	project_files/IceBreaker_top.vhd	/^		TX			: OUT	STD_LOGIC;	-- UART TX out (for CPU "trace")$/;"	q	entity:IceBreaker_top
TinyFPGA_top	project_files/TinyFPGA_top.vhd	/^ENTITY TinyFPGA_top IS$/;"	e
URL	project_files/git_ctags_cmdline.py	/^URL = input("Paste or type GitHub URL: ")$/;"	v
Value	project_files/cpu.vhd	/^		variable Value				: UNSIGNED(uslv'length-1 downto 0);$/;"	v	function:cpu.RTL.to_bin
a	project_files/cpu.vhd	/^	SIGNAL	a		: UNSIGNED(7 downto 0) := (others => '0');	-- A register value$/;"	s	architecture:cpu.RTL
addr_i	project_files/ram.vhd	/^		addr_i	: in	std_logic_vector(addrwidth-1 downto 0);$/;"	q	entity:RAM
addr_r	project_files/cpu_trace.vhd	/^	signal addr_r	: UNSIGNED(addrwidth-1 downto 0);$/;"	s	architecture:cpu_trace.RTL
addr_r	project_files/ram.vhd	/^	signal addr_r	: unsigned(addrwidth-1 downto 0);$/;"	s	architecture:RAM.RTL
addrwidth	project_files/cpu_trace.vhd	/^	constant addrwidth : INTEGER := 10;$/;"	c	architecture:cpu_trace.RTL
addrwidth	project_files/ram.vhd	/^		addrwidth:	integer := 4;$/;"	g	entity:RAM
ai	project_files/cpu.vhd	/^	SIGNAL	ai		: STD_LOGIC := '0';							-- load A from bus$/;"	s	architecture:cpu.RTL
alu	project_files/cpu.vhd	/^	alu: PROCESS(a, b, su)$/;"	Q	architecture:cpu.RTL
anonProcess17bed6b4010f	project_files/tx_uart.vhd	/^PROCESS(clk_i, rst_i)$/;"	Q	architecture:tx_uart.RTL
anonProcess17bed6b4020f	project_files/tx_uart.vhd	/^	PROCESS(clk_i, rst_i)$/;"	Q	architecture:tx_uart.RTL
anonProcessd1789da7010f	project_files/system_tb.vhd	/^	PROCESS$/;"	Q	architecture:system_tb.Behavioural
anonProcessd1789da7020f	project_files/system_tb.vhd	/^	PROCESS(clk, rst)$/;"	Q	architecture:system_tb.Behavioural
ao	project_files/cpu.vhd	/^	SIGNAL	ao		: STD_LOGIC := '0';							-- output A on bus$/;"	s	architecture:cpu.RTL
b	project_files/cpu.vhd	/^	SIGNAL	b		: UNSIGNED(7 downto 0) := (others => '0');	-- B register value$/;"	s	architecture:cpu.RTL
bi	project_files/cpu.vhd	/^	SIGNAL	bi		: STD_LOGIC := '0';							-- load B from bus$/;"	s	architecture:cpu.RTL
bit_ff	project_files/tx_uart.vhd	/^	SIGNAL	bit_ff:			STD_LOGIC_VECTOR(3 downto 0) := (others => '0');$/;"	s	architecture:tx_uart.RTL
bit_time	project_files/tx_uart.vhd	/^	SIGNAL	bit_time:		UNSIGNED(bits_for_clock-1 downto 0) := (others => '0');$/;"	s	architecture:tx_uart.RTL
bit_time_count	project_files/tx_uart.vhd	/^	SIGNAL	bit_time_count:	UNSIGNED(bits_for_clock-1 downto 0) := (others => '0');$/;"	s	architecture:tx_uart.RTL
bits_for_clock	project_files/tx_uart.vhd	/^	CONSTANT bits_for_clock: INTEGER := 16;$/;"	c	architecture:tx_uart.RTL
blink	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	blink			: STD_LOGIC := '0';$/;"	s	architecture:Microwavemont_top.RTL
bo	project_files/cpu.vhd	/^	SIGNAL	bo		: STD_LOGIC := '0';							-- output B on bus$/;"	s	architecture:cpu.RTL
bps_count	project_files/tx_uart.vhd	/^	SIGNAL	bps_count:		UNSIGNED(bits_for_clock-1 downto 0) := clocks_per_bit;$/;"	s	architecture:tx_uart.RTL
bps_counter	project_files/tx_uart.vhd	/^	SIGNAL	bps_counter:	UNSIGNED(bits_for_clock-1 downto 0) := (others => '0');$/;"	s	architecture:tx_uart.RTL
btn1	project_files/MicrowavemontFPGA_top.vhd	/^		btn1		: IN	STD_LOGIC;$/;"	q	entity:Microwavemont_top
btn2	project_files/MicrowavemontFPGA_top.vhd	/^		btn2		: IN	STD_LOGIC$/;"	q	entity:Microwavemont_top
btn_count	project_files/IceBreaker_top.vhd	/^	SIGNAL	btn_count	: UNSIGNED(15 downto 0) := (others => '0');$/;"	s	architecture:IceBreaker_top.RTL
btn_read	project_files/IceBreaker_top.vhd	/^	btn_read: PROCESS(clk)$/;"	Q	architecture:IceBreaker_top.RTL
btn_read	project_files/MicrowavemontFPGA_top.vhd	/^	btn_read: PROCESS(clk)$/;"	Q	architecture:Microwavemont_top.RTL
btn_read	project_files/TinyFPGA_top.vhd	/^	btn_read: PROCESS(clk, rst)$/;"	Q	architecture:TinyFPGA_top.RTL
bus_in	project_files/cpu.vhd	/^		VARIABLE	bus_in: STRING(1 to 6*2);$/;"	v	process:cpu.RTL.debug
bus_out	project_files/cpu.vhd	/^		VARIABLE	bus_out: STRING(1 to 6*2);$/;"	v	process:cpu.RTL.debug
bus_out	project_files/cpu.vhd	/^	bus_out: PROCESS(pc, co, ram_data_i, ro, ir, io, a, ao, e, eo, b, bo)$/;"	Q	architecture:cpu.RTL
bus_save	project_files/cpu.vhd	/^		VARIABLE	bus_save: UNSIGNED(7 downto 0);$/;"	v	process:cpu.RTL.debug
busy_o	project_files/cpu_trace.vhd	/^		busy_o		: OUT	STD_LOGIC;$/;"	q	entity:cpu_trace
busy_o	project_files/tx_uart.vhd	/^		busy_o: OUT STD_LOGIC;						-- high when UART busy transmitting$/;"	q	entity:tx_uart
busy_r	project_files/tx_uart.vhd	/^	SIGNAL	busy_r:			STD_LOGIC := '0';$/;"	s	architecture:tx_uart.RTL
ce	project_files/cpu.vhd	/^	SIGNAL	ce		: STD_LOGIC := '0';							-- program counter increment$/;"	s	architecture:cpu.RTL
ci	project_files/cpu.vhd	/^	SIGNAL	ci		: STD_LOGIC := '0';							-- load PC from bus (for j or jc)$/;"	s	architecture:cpu.RTL
clk	project_files/IceBreaker_top.vhd	/^		clk			: IN 	STD_LOGIC;$/;"	q	entity:IceBreaker_top
clk	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	clk			: STD_LOGIC := '0';						-- CPU clock$/;"	s	architecture:Microwavemont_top.RTL
clk	project_files/TinyFPGA_top.vhd	/^	SIGNAL	clk		: STD_LOGIC := '0';							-- CPU clock$/;"	s	architecture:TinyFPGA_top.RTL
clk	project_files/cpu.vhd	/^	SIGNAL	clk		: STD_LOGIC := '0';							-- CPU clock$/;"	s	architecture:cpu.RTL
clk	project_files/cpu_trace.vhd	/^	SIGNAL	clk			: STD_LOGIC;$/;"	s	architecture:cpu_trace.RTL
clk	project_files/system.vhd	/^	SIGNAL	clk		: STD_LOGIC := '0';				-- CPU clock$/;"	s	architecture:system.RTL
clk	project_files/system_tb.vhd	/^	SIGNAL	clk		: STD_LOGIC := '0';							-- CPU clock$/;"	s	architecture:system_tb.Behavioural
clk_12mhz	project_files/MicrowavemontFPGA_top.vhd	/^		clk_12mhz	: IN	STD_LOGIC;$/;"	q	entity:Microwavemont_top
clk_en	project_files/IceBreaker_top.vhd	/^	SIGNAL	clk_en	: STD_LOGIC := '0';							-- CPU clock enable (clock ignored if 0)$/;"	s	architecture:IceBreaker_top.RTL
clk_en	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	clk_en		: STD_LOGIC := '0';						-- CPU clock enable (clock ignored if 0)$/;"	s	architecture:Microwavemont_top.RTL
clk_en	project_files/TinyFPGA_top.vhd	/^	SIGNAL	clk_en	: STD_LOGIC := '0';							-- CPU clock enable (clock ignored if 0)$/;"	s	architecture:TinyFPGA_top.RTL
clk_en	project_files/cpu.vhd	/^	SIGNAL	clk_en	: STD_LOGIC := '0';							-- CPU clock enable (clock ignored if 0)$/;"	s	architecture:cpu.RTL
clk_en	project_files/cpu_trace.vhd	/^	SIGNAL	clk_en		: STD_LOGIC;$/;"	s	architecture:cpu_trace.RTL
clk_en	project_files/system.vhd	/^	SIGNAL	clk_en	: STD_LOGIC := '0';				-- CPU clock enable (clock ignored if 0)$/;"	s	architecture:system.RTL
clk_en	project_files/system_tb.vhd	/^	SIGNAL	clk_en	: STD_LOGIC := '0';							-- CPU clock enable (clock ignored if 0)$/;"	s	architecture:system_tb.Behavioural
clk_en_i	project_files/cpu.vhd	/^		clk_en_i	: IN	STD_LOGIC;$/;"	q	entity:cpu
clk_en_i	project_files/cpu_trace.vhd	/^		clk_en_i	: IN	STD_LOGIC;$/;"	q	entity:cpu_trace
clk_en_i	project_files/system.vhd	/^		clk_en_i	: IN	STD_LOGIC;$/;"	q	entity:system
clk_i	project_files/IceBreaker_pmod_7seg.vhd	/^		clk_i		: IN	STD_LOGIC;$/;"	q	entity:PMOD_7Seg
clk_i	project_files/cpu.vhd	/^		clk_i		: IN	STD_LOGIC;$/;"	q	entity:cpu
clk_i	project_files/cpu_trace.vhd	/^		clk_i		: IN	STD_LOGIC;$/;"	q	entity:cpu_trace
clk_i	project_files/ram.vhd	/^		clk_i	: in	std_logic;$/;"	q	entity:RAM
clk_i	project_files/system.vhd	/^		clk_i		: IN	STD_LOGIC;$/;"	q	entity:system
clk_i	project_files/tx_uart.vhd	/^		clk_i:	IN	STD_LOGIC;						-- FPGA clock$/;"	q	entity:tx_uart
clocks_per_bit	project_files/tx_uart.vhd	/^	CONSTANT clocks_per_bit: UNSIGNED(bits_for_clock-1 downto 0) := to_unsigned((C_SYSTEM_HZ \/ C_B/;"	c	architecture:tx_uart.RTL
co	project_files/cpu.vhd	/^	SIGNAL	co		: STD_LOGIC := '0';							-- output PC on bus$/;"	s	architecture:cpu.RTL
control	project_files/cpu.vhd	/^	control: PROCESS(rst, clk, clk_en)$/;"	Q	architecture:cpu.RTL
count	project_files/system_tb.vhd	/^		VARIABLE count :	INTEGER RANGE 0 TO ((C_SYSTEM_HZ\/C_TARGET_HZ)\/2);$/;"	v	process:system_tb.Behavioural.anonProcessd1789da7020f
count_proc	project_files/IceBreaker_pmod_7seg.vhd	/^	count_proc: process(clk_i)$/;"	Q	architecture:PMOD_7Seg.RTL
counter	project_files/IceBreaker_pmod_7seg.vhd	/^	SIGNAL	counter		: UNSIGNED(7 downto 0);					-- enough to slow down 12Mhz clock (~21 usec)$/;"	s	architecture:PMOD_7Seg.RTL
counter	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	counter		: UNSIGNED (12 downto 0);				-- count to 0x1fff for ~= 1464Hz @ 12Mhz clock$/;"	s	architecture:Microwavemont_top.RTL
cpu	project_files/cpu.vhd	/^ENTITY cpu IS$/;"	e
cpu_bus	project_files/cpu.vhd	/^	SIGNAL	cpu_bus : UNSIGNED(7 downto 0) := (others => '0');	-- 8-bit CPU internal bus$/;"	s	architecture:cpu.RTL
cpu_count	project_files/IceBreaker_top.vhd	/^	SIGNAL	cpu_count	: INTEGER RANGE 0 TO cyc_per_clk-1 := 0;$/;"	s	architecture:IceBreaker_top.RTL
cpu_count	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	cpu_count	: INTEGER RANGE 0 TO cyc_per_clk-1;$/;"	s	architecture:Microwavemont_top.RTL
cpu_count	project_files/TinyFPGA_top.vhd	/^	SIGNAL	cpu_count	: INTEGER RANGE 0 TO cyc_per_clk-1;$/;"	s	architecture:TinyFPGA_top.RTL
cpu_debug_out	project_files/system.vhd	/^	SIGNAL	cpu_debug_out	: STD_LOGIC_VECTOR(7 downto 0) := (others => '0');$/;"	s	architecture:system.RTL
cpu_debug_sel	project_files/system.vhd	/^	SIGNAL	cpu_debug_sel	: STD_LOGIC_VECTOR(3 downto 0) := (others => '0');$/;"	s	architecture:system.RTL
cpu_out	project_files/IceBreaker_top.vhd	/^	SIGNAL	cpu_out : STD_LOGIC_VECTOR(7 downto 0) := (others => '0');$/;"	s	architecture:IceBreaker_top.RTL
cpu_out	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	cpu_out		: STD_LOGIC_VECTOR(7 downto 0) := (others => '0');$/;"	s	architecture:Microwavemont_top.RTL
cpu_out	project_files/TinyFPGA_top.vhd	/^	SIGNAL	cpu_out : STD_LOGIC_VECTOR(7 downto 0) := (others => '0');$/;"	s	architecture:TinyFPGA_top.RTL
cpu_trace	project_files/cpu_trace.vhd	/^ENTITY cpu_trace IS$/;"	e
ctrl	project_files/cpu.vhd	/^		VARIABLE	ctrl: STRING(1 to 7*3);$/;"	v	process:cpu.RTL.debug
cy	project_files/cpu.vhd	/^	SIGNAL	cy		: STD_LOGIC := '0';							-- carry flag register (set from ec when eo asserted)$/;"	s	architecture:cpu.RTL
cyc_per_10ms	project_files/TinyFPGA_top.vhd	/^	CONSTANT cyc_per_10ms : INTEGER := (C_SYSTEM_HZ+50)\/100;$/;"	c	architecture:TinyFPGA_top.RTL
cyc_per_clk	project_files/IceBreaker_top.vhd	/^	CONSTANT cyc_per_clk	: INTEGER := (C_SYSTEM_HZ\/C_TARGET_HZ)\/2;$/;"	c	architecture:IceBreaker_top.RTL
cyc_per_clk	project_files/MicrowavemontFPGA_top.vhd	/^	CONSTANT cyc_per_clk	: INTEGER := (C_SYSTEM_HZ\/C_TARGET_HZ)\/2;$/;"	c	architecture:Microwavemont_top.RTL
cyc_per_clk	project_files/TinyFPGA_top.vhd	/^	CONSTANT cyc_per_clk	: INTEGER := (C_SYSTEM_HZ\/C_TARGET_HZ)\/2;$/;"	c	architecture:TinyFPGA_top.RTL
cycles	project_files/cpu.vhd	/^		VARIABLE	cycles: NATURAL := 0;$/;"	v	process:cpu.RTL.debug
data_cpu_to_ram	project_files/system.vhd	/^	SIGNAL	data_cpu_to_ram : STD_LOGIC_VECTOR(7 downto 0) := (others => '0');$/;"	s	architecture:system.RTL
data_i	project_files/tx_uart.vhd	/^		data_i:	IN	STD_LOGIC_VECTOR(7 downto 0);	-- data to send$/;"	q	entity:tx_uart
data_ram_to_cpu	project_files/system.vhd	/^	SIGNAL	data_ram_to_cpu : STD_LOGIC_VECTOR(7 downto 0) := (others => '0');$/;"	s	architecture:system.RTL
datawidth	project_files/ram.vhd	/^		datawidth:	integer := 8$/;"	g	entity:RAM
debug	project_files/cpu.vhd	/^	debug: PROCESS(clk, cpu_bus, debug_sel_i, t_cyc, h, id, pc, jc, ci, co, ce, mar, mi, ri, ro, ir/;"	Q	architecture:cpu.RTL
debug_out_o	project_files/cpu.vhd	/^		debug_out_o : OUT	STD_LOGIC_VECTOR(7 downto 0)$/;"	q	entity:cpu
debug_reg	project_files/cpu_trace.vhd	/^	SIGNAL	debug_reg	: STD_LOGIC_VECTOR(3 downto 0);$/;"	s	architecture:cpu_trace.RTL
debug_save	project_files/cpu_trace.vhd	/^	SIGNAL	debug_save	: STD_LOGIC_VECTOR(7 downto 0);$/;"	s	architecture:cpu_trace.RTL
debug_sel_i	project_files/cpu.vhd	/^		debug_sel_i : IN	STD_LOGIC_VECTOR(3 downto 0);$/;"	q	entity:cpu
debug_sel_o	project_files/cpu_trace.vhd	/^		debug_sel_o : OUT	STD_LOGIC_VECTOR(3 downto 0);$/;"	q	entity:cpu_trace
debug_val_i	project_files/cpu_trace.vhd	/^		debug_val_i : IN	STD_LOGIC_VECTOR(7 downto 0)$/;"	q	entity:cpu_trace
decimal	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	decimal		: STD_LOGIC_VECTOR(1 downto 0);		-- true if digit is to be blanked (no segments/;"	s	architecture:Microwavemont_top.RTL
delete	project_files/restart_vsc.py	/^def delete(path):$/;"	f
digit	project_files/IceBreaker_pmod_7seg.vhd	/^	SIGNAL	digit		: STD_LOGIC;							-- bit to indicate which LED to activtate (0=seg1, 1=seg2)$/;"	s	architecture:PMOD_7Seg.RTL
digit	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	digit		: UNSIGNED(1 downto 0);				-- bit to indicate which LED to activtate (0=seg1, 1=s/;"	s	architecture:Microwavemont_top.RTL
digit1neg	project_files/MicrowavemontFPGA_top.vhd	/^		digit1neg	: OUT	STD_LOGIC;$/;"	q	entity:Microwavemont_top
digit2neg	project_files/MicrowavemontFPGA_top.vhd	/^		digit2neg	: OUT	STD_LOGIC;$/;"	q	entity:Microwavemont_top
do_ram	project_files/ram.vhd	/^	do_ram:$/;"	Q	architecture:RAM.RTL
do_trace	project_files/cpu_trace.vhd	/^	do_trace: PROCESS(rst, clk, clk_en)$/;"	Q	architecture:cpu_trace.RTL
e	project_files/cpu.vhd	/^	SIGNAL	e		: UNSIGNED(7 downto 0) := (others => '0');	-- ALU result value (aka "E" for sum symbo/;"	s	architecture:cpu.RTL
ec	project_files/cpu.vhd	/^	SIGNAL	ec		: STD_LOGIC := '0';							-- carry bit of ALU result$/;"	s	architecture:cpu.RTL
eo	project_files/cpu.vhd	/^	SIGNAL	eo		: STD_LOGIC := '0';							-- output ALU result on bus$/;"	s	architecture:cpu.RTL
ez	project_files/cpu.vhd	/^	SIGNAL	ez		: STD_LOGIC := '0';							-- zero flag bit of ALU result$/;"	s	architecture:cpu.RTL
file_types	project_files/git_ctags_cmdline.py	/^file_types = [".py", ".v", ".vhd", ".sv"]$/;"	v
file_types	project_files/git_ctags_local.py	/^file_types = ['.py', '.sv', '.v', '.vhd']$/;"	v
file_types	project_files/git_ctags_vsc.py	/^file_types = ['.py', '.sv', '.v', '.vhd']$/;"	v
first_clk	project_files/IceBreaker_top.vhd	/^	SIGNAL	first_clk	: UNSIGNED(1 downto 0) := (others => '0');$/;"	s	architecture:IceBreaker_top.RTL
h	project_files/cpu.vhd	/^	SIGNAL	h		: STD_LOGIC := '0';							-- halt clock (for HLT opcode)$/;"	s	architecture:cpu.RTL
halt	project_files/IceBreaker_top.vhd	/^	SIGNAL	halt	: STD_LOGIC := '0';							-- CPU halted$/;"	s	architecture:IceBreaker_top.RTL
halt	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	halt		: STD_LOGIC := '0';						-- CPU halted$/;"	s	architecture:Microwavemont_top.RTL
halt	project_files/TinyFPGA_top.vhd	/^	SIGNAL	halt	: STD_LOGIC := '0';							-- CPU halted$/;"	s	architecture:TinyFPGA_top.RTL
halt	project_files/system.vhd	/^	SIGNAL	halt			: STD_LOGIC := '0';$/;"	s	architecture:system.RTL
halt_i	project_files/cpu_trace.vhd	/^		halt_i		: IN	STD_LOGIC;$/;"	q	entity:cpu_trace
halt_o	project_files/system.vhd	/^		halt_o		: OUT	STD_LOGIC;$/;"	q	entity:system
halted	project_files/cpu.vhd	/^		VARIABLE	halted: BOOLEAN := false;$/;"	v	process:cpu.RTL.debug
hlt_o	project_files/cpu.vhd	/^		hlt_o		: OUT	STD_LOGIC;$/;"	q	entity:cpu
id	project_files/cpu.vhd	/^	SIGNAL	id		: STD_LOGIC := '0';							-- instruction done, reset t_cyc$/;"	s	architecture:cpu.RTL
ii	project_files/cpu.vhd	/^	SIGNAL	ii		: STD_LOGIC := '0';							-- load IR from bus$/;"	s	architecture:cpu.RTL
io	project_files/cpu.vhd	/^	SIGNAL	io		: STD_LOGIC := '0';							-- output IR on bus (4-LSB)$/;"	s	architecture:cpu.RTL
ir	project_files/cpu.vhd	/^	SIGNAL	ir		: UNSIGNED(7 downto 0) := (others => '0');	-- instruction register value$/;"	s	architecture:cpu.RTL
j	project_files/cpu.vhd	/^		variable j					: NATURAL;$/;"	v	function:cpu.RTL.to_bin
j	project_files/cpu.vhd	/^	SIGNAL	j		: STD_LOGIC := '0';							-- unconditional jump (load PC from bus)$/;"	s	architecture:cpu.RTL
jc	project_files/cpu.vhd	/^	SIGNAL	jc		: STD_LOGIC := '0';							-- conditional jump (load PC from bus) if carry set$/;"	s	architecture:cpu.RTL
jz	project_files/cpu.vhd	/^	SIGNAL	jz		: STD_LOGIC := '0';							-- conditional jump (load PC from bus) if zero set$/;"	s	architecture:cpu.RTL
last_clk_en	project_files/cpu_trace.vhd	/^	SIGNAL	last_clk_en : STD_LOGIC;$/;"	s	architecture:cpu_trace.RTL
led	project_files/IceBreaker_top.vhd	/^	SIGNAL	led		: STD_LOGIC := '0';$/;"	s	architecture:IceBreaker_top.RTL
led	project_files/TinyFPGA_top.vhd	/^	SIGNAL	led		: STD_LOGIC := '0';$/;"	s	architecture:TinyFPGA_top.RTL
led1	project_files/MicrowavemontFPGA_top.vhd	/^		led1		: OUT	STD_LOGIC;$/;"	q	entity:Microwavemont_top
led2	project_files/MicrowavemontFPGA_top.vhd	/^		led2		: OUT	STD_LOGIC;$/;"	q	entity:Microwavemont_top
led3	project_files/MicrowavemontFPGA_top.vhd	/^		led3		: OUT	STD_LOGIC;$/;"	q	entity:Microwavemont_top
led4	project_files/MicrowavemontFPGA_top.vhd	/^		led4		: OUT	STD_LOGIC;$/;"	q	entity:Microwavemont_top
led5	project_files/MicrowavemontFPGA_top.vhd	/^		led5		: OUT	STD_LOGIC;$/;"	q	entity:Microwavemont_top
led6	project_files/MicrowavemontFPGA_top.vhd	/^		led6		: OUT	STD_LOGIC;$/;"	q	entity:Microwavemont_top
led7	project_files/MicrowavemontFPGA_top.vhd	/^		led7		: OUT	STD_LOGIC;$/;"	q	entity:Microwavemont_top
led8	project_files/MicrowavemontFPGA_top.vhd	/^		led8		: OUT	STD_LOGIC;$/;"	q	entity:Microwavemont_top
ledA_o	project_files/IceBreaker_pmod_7seg.vhd	/^		ledA_o		: OUT	STD_LOGIC;$/;"	q	entity:PMOD_7Seg
ledB_o	project_files/IceBreaker_pmod_7seg.vhd	/^		ledB_o		: OUT	STD_LOGIC;$/;"	q	entity:PMOD_7Seg
ledCA_o	project_files/IceBreaker_pmod_7seg.vhd	/^		ledCA_o		: OUT	STD_LOGIC$/;"	q	entity:PMOD_7Seg
ledC_o	project_files/IceBreaker_pmod_7seg.vhd	/^		ledC_o		: OUT	STD_LOGIC;$/;"	q	entity:PMOD_7Seg
ledD_o	project_files/IceBreaker_pmod_7seg.vhd	/^		ledD_o		: OUT	STD_LOGIC;$/;"	q	entity:PMOD_7Seg
ledE_o	project_files/IceBreaker_pmod_7seg.vhd	/^		ledE_o		: OUT	STD_LOGIC;$/;"	q	entity:PMOD_7Seg
ledF_o	project_files/IceBreaker_pmod_7seg.vhd	/^		ledF_o		: OUT	STD_LOGIC;$/;"	q	entity:PMOD_7Seg
ledG_o	project_files/IceBreaker_pmod_7seg.vhd	/^		ledG_o		: OUT	STD_LOGIC;$/;"	q	entity:PMOD_7Seg
ledneg	project_files/MicrowavemontFPGA_top.vhd	/^		ledneg		: OUT	STD_LOGIC;$/;"	q	entity:Microwavemont_top
mar	project_files/cpu.vhd	/^	SIGNAL	mar		: UNSIGNED(3 downto 0) := (others => '0');	-- RAM address register value$/;"	s	architecture:cpu.RTL
mi	project_files/cpu.vhd	/^	SIGNAL	mi		: STD_LOGIC := '0';							-- load MAR from bus$/;"	s	architecture:cpu.RTL
ms_count	project_files/TinyFPGA_top.vhd	/^	SIGNAL	ms_count	: INTEGER RANGE 0 TO cyc_per_10ms-1;$/;"	s	architecture:TinyFPGA_top.RTL
ms_per_clk	project_files/TinyFPGA_top.vhd	/^	CONSTANT ms_per_clk	: INTEGER := (C_TARGET_HZ*100)\/2;$/;"	c	architecture:TinyFPGA_top.RTL
nib	project_files/IceBreaker_pmod_7seg.vhd	/^		variable nib: STD_LOGIC_VECTOR(3 downto 0);$/;"	v	process:PMOD_7Seg.RTL.count_proc
number	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	number		: STD_LOGIC_VECTOR(7 downto 0);		-- 8-bit number to display in hex$/;"	s	architecture:Microwavemont_top.RTL
number_i	project_files/IceBreaker_pmod_7seg.vhd	/^		number_i	: IN	STD_LOGIC_VECTOR(7 downto 0);		-- 8-bit number to display in hex on 7-segments$/;"	q	entity:PMOD_7Seg
o	project_files/cpu.vhd	/^	SIGNAL	o		: UNSIGNED(7 downto 0) := (others => '0');	-- OUT command value$/;"	s	architecture:cpu.RTL
oi	project_files/cpu.vhd	/^	SIGNAL	oi		: STD_LOGIC := '0';							-- load OUT from bus$/;"	s	architecture:cpu.RTL
op	project_files/cpu.vhd	/^		VARIABLE	op:	STRING(1 to 3);$/;"	v	process:cpu.RTL.debug
op_codes	project_files/cpu.vhd	/^		constant 	op_codes: STRING := "NOPLDAADDSUBSTALDIJMPJC JZ 9??A??B??C??D??OUTHLT";$/;"	c	process:cpu.RTL.debug
out_o	project_files/system.vhd	/^		out_o		: OUT	STD_LOGIC_VECTOR(7 downto 0);$/;"	q	entity:system
out_val_o	project_files/cpu.vhd	/^		out_val_o	: OUT	STD_LOGIC_VECTOR(7 downto 0);$/;"	q	entity:cpu
pc	project_files/cpu.vhd	/^	SIGNAL	pc		: UNSIGNED(3 downto 0) := (others => '0');	-- program counter value$/;"	s	architecture:cpu.RTL
pin1	project_files/TinyFPGA_top.vhd	/^		pin1		: OUT	STD_LOGIC;	-- CPU out 0 led $/;"	q	entity:TinyFPGA_top
pin10_sda	project_files/TinyFPGA_top.vhd	/^		pin10_sda	: IN	STD_LOGIC;	-- UART rx in$/;"	q	entity:TinyFPGA_top
pin11_scl	project_files/TinyFPGA_top.vhd	/^		pin11_scl	: OUT	STD_LOGIC;	-- unused$/;"	q	entity:TinyFPGA_top
pin16	project_files/TinyFPGA_top.vhd	/^		pin16		: OUT	STD_LOGIC;	-- unused$/;"	q	entity:TinyFPGA_top
pin17	project_files/TinyFPGA_top.vhd	/^		pin17		: OUT	STD_LOGIC;	-- unused$/;"	q	entity:TinyFPGA_top
pin18_cs	project_files/TinyFPGA_top.vhd	/^		pin18_cs	: OUT	STD_LOGIC;	-- unused$/;"	q	entity:TinyFPGA_top
pin19_sclk	project_files/TinyFPGA_top.vhd	/^		pin19_sclk	: OUT	STD_LOGIC;	-- unused$/;"	q	entity:TinyFPGA_top
pin2	project_files/TinyFPGA_top.vhd	/^		pin2		: OUT	STD_LOGIC;	-- CPU out 1 led $/;"	q	entity:TinyFPGA_top
pin20_miso	project_files/TinyFPGA_top.vhd	/^		pin20_miso	: OUT	STD_LOGIC;	-- CPU slow clock LED$/;"	q	entity:TinyFPGA_top
pin21	project_files/TinyFPGA_top.vhd	/^		pin21		: IN	STD_LOGIC;	-- PAUSE button$/;"	q	entity:TinyFPGA_top
pin22	project_files/TinyFPGA_top.vhd	/^		pin22		: IN	STD_LOGIC	-- \/RESET button$/;"	q	entity:TinyFPGA_top
pin3_sn	project_files/TinyFPGA_top.vhd	/^		pin3_sn		: OUT	STD_LOGIC;	-- CPU out 2 led $/;"	q	entity:TinyFPGA_top
pin4_mosi	project_files/TinyFPGA_top.vhd	/^		pin4_mosi	: OUT	STD_LOGIC;	-- CPU out 3 led $/;"	q	entity:TinyFPGA_top
pin5	project_files/TinyFPGA_top.vhd	/^		pin5		: OUT	STD_LOGIC;	-- CPU out 4 led $/;"	q	entity:TinyFPGA_top
pin6	project_files/TinyFPGA_top.vhd	/^		pin6		: OUT	STD_LOGIC;	-- CPU out 5 led $/;"	q	entity:TinyFPGA_top
pin7_done	project_files/TinyFPGA_top.vhd	/^		pin7_done	: OUT	STD_LOGIC;	-- CPU out 6 led $/;"	q	entity:TinyFPGA_top
pin8_pgmn	project_files/TinyFPGA_top.vhd	/^		pin8_pgmn	: OUT	STD_LOGIC;	-- CPU out 7 led $/;"	q	entity:TinyFPGA_top
pin9_jtgnb	project_files/TinyFPGA_top.vhd	/^		pin9_jtgnb	: OUT	STD_LOGIC;	-- UART tx out$/;"	q	entity:TinyFPGA_top
ram	project_files/ram.vhd	/^	signal ram : ram_type :=$/;"	s	architecture:RAM.RTL
ram_addr	project_files/system.vhd	/^	SIGNAL	ram_addr		: STD_LOGIC_VECTOR(3 downto 0) := (others => '0');$/;"	s	architecture:system.RTL
ram_addr_o	project_files/cpu.vhd	/^		ram_addr_o	: OUT	STD_LOGIC_VECTOR(3 downto 0);$/;"	q	entity:cpu
ram_data_i	project_files/cpu.vhd	/^		ram_data_i	: IN	STD_LOGIC_VECTOR(7 downto 0);$/;"	q	entity:cpu
ram_data_o	project_files/cpu.vhd	/^		ram_data_o	: OUT	STD_LOGIC_VECTOR(7 downto 0);$/;"	q	entity:cpu
ram_type	project_files/ram.vhd	/^	type ram_type is array(0 to ramtop) of std_logic_vector(datawidth-1 downto 0);$/;"	t	architecture:RAM.RTL
ram_we	project_files/system.vhd	/^	SIGNAL	ram_we			: STD_LOGIC := '0';$/;"	s	architecture:system.RTL
ram_write_o	project_files/cpu.vhd	/^		ram_write_o : OUT	STD_LOGIC;$/;"	q	entity:cpu
ramtop	project_files/ram.vhd	/^	constant ramtop : integer := (2**addrwidth)-1;$/;"	c	architecture:RAM.RTL
read_o	project_files/ram.vhd	/^		read_o	: out	std_logic_vector(datawidth-1 downto 0)$/;"	q	entity:RAM
registers	project_files/cpu.vhd	/^	registers: PROCESS(rst, clk)$/;"	Q	architecture:cpu.RTL
repo_path	project_files/git_ctags_local.py	/^repo_path = input("Enter the path for your repository: ")$/;"	v
ri	project_files/cpu.vhd	/^	SIGNAL	ri		: STD_LOGIC := '0';							-- RAM input (write bus to RAM)$/;"	s	architecture:cpu.RTL
ro	project_files/cpu.vhd	/^	SIGNAL	ro		: STD_LOGIC := '0';							-- RAM output to bus$/;"	s	architecture:cpu.RTL
rom_data	project_files/cpu_trace.vhd	/^	signal rom_data : STD_LOGIC_VECTOR(7 downto 0);$/;"	s	architecture:cpu_trace.RTL
rom_type	project_files/cpu_trace.vhd	/^	type rom_type is array(0 to romtop) of STD_LOGIC_VECTOR(7 downto 0);$/;"	t	architecture:cpu_trace.RTL
romtop	project_files/cpu_trace.vhd	/^	constant romtop : INTEGER := (2**addrwidth)-1;$/;"	c	architecture:cpu_trace.RTL
rst	project_files/IceBreaker_top.vhd	/^	SIGNAL	rst		: STD_LOGIC := '0';							-- asynchronous reset$/;"	s	architecture:IceBreaker_top.RTL
rst	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	rst			: STD_LOGIC := '0';						-- asynchronous reset$/;"	s	architecture:Microwavemont_top.RTL
rst	project_files/TinyFPGA_top.vhd	/^	SIGNAL	rst		: STD_LOGIC := '0';							-- asynchronous reset$/;"	s	architecture:TinyFPGA_top.RTL
rst	project_files/cpu.vhd	/^	SIGNAL	rst		: STD_LOGIC := '0';							-- asynchronous reset$/;"	s	architecture:cpu.RTL
rst	project_files/cpu_trace.vhd	/^	SIGNAL	rst			: STD_LOGIC;$/;"	s	architecture:cpu_trace.RTL
rst	project_files/system.vhd	/^	SIGNAL	rst		: STD_LOGIC := '0';				-- asynchronous reset$/;"	s	architecture:system.RTL
rst	project_files/system_tb.vhd	/^	SIGNAL	rst		: STD_LOGIC := '0';							-- asynchronous reset$/;"	s	architecture:system_tb.Behavioural
rst_btn	project_files/IceBreaker_top.vhd	/^	SIGNAL	rst_btn		: STD_LOGIC := '0';							-- asynchronous reset$/;"	s	architecture:IceBreaker_top.RTL
rst_btn	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	rst_btn		: STD_LOGIC := '0';$/;"	s	architecture:Microwavemont_top.RTL
rst_btn	project_files/TinyFPGA_top.vhd	/^	SIGNAL	rst_btn		: STD_LOGIC := '0';$/;"	s	architecture:TinyFPGA_top.RTL
rst_btn_ff	project_files/IceBreaker_top.vhd	/^	SIGNAL	rst_btn_ff	: STD_LOGIC_VECTOR(1 downto 0) := "00";$/;"	s	architecture:IceBreaker_top.RTL
rst_btn_ff	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	rst_btn_ff	: STD_LOGIC_VECTOR(1 downto 0) := "11";$/;"	s	architecture:Microwavemont_top.RTL
rst_btn_ff	project_files/TinyFPGA_top.vhd	/^	SIGNAL	rst_btn_ff	: STD_LOGIC_VECTOR(1 downto 0) := "11";$/;"	s	architecture:TinyFPGA_top.RTL
rst_i	project_files/cpu.vhd	/^		rst_i		: IN	STD_LOGIC;$/;"	q	entity:cpu
rst_i	project_files/cpu_trace.vhd	/^		rst_i		: IN	STD_LOGIC;$/;"	q	entity:cpu_trace
rst_i	project_files/system.vhd	/^		rst_i		: IN	STD_LOGIC;$/;"	q	entity:system
rst_i	project_files/tx_uart.vhd	/^		rst_i:	IN	STD_LOGIC;						-- reset$/;"	q	entity:tx_uart
rx_i	project_files/IceBreaker_top.vhd	/^	SIGNAL	rx_i		: STD_LOGIC := '0';	$/;"	s	architecture:IceBreaker_top.RTL
rx_i	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	rx_i		: STD_LOGIC := '0';	$/;"	s	architecture:Microwavemont_top.RTL
rx_i	project_files/TinyFPGA_top.vhd	/^	SIGNAL	rx_i		: STD_LOGIC := '0';	$/;"	s	architecture:TinyFPGA_top.RTL
rx_i	project_files/system.vhd	/^		rx_i		: IN	STD_LOGIC$/;"	q	entity:system
rx_i	project_files/tx_uart.vhd	/^		rx_i:	IN STD_LOGIC						-- TX pin output$/;"	q	entity:tx_uart
scl	project_files/MicrowavemontFPGA_top.vhd	/^		scl			: IN	STD_LOGIC;	-- RX (optional for auto baud set)$/;"	q	entity:Microwavemont_top
sda	project_files/MicrowavemontFPGA_top.vhd	/^		sda			: OUT	STD_LOGIC;	-- TX (9600 N 1)$/;"	q	entity:Microwavemont_top
segments	project_files/IceBreaker_pmod_7seg.vhd	/^	SIGNAL	segments	: STD_LOGIC_VECTOR(6 downto 0);			-- 7-segment segments (a, b, c, d, e, f, g)$/;"	s	architecture:PMOD_7Seg.RTL
segments	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	segments	: STD_LOGIC_VECTOR(7 downto 0);			-- 7-segment segments (a, b, c, d, e, f, g, d/;"	s	architecture:Microwavemont_top.RTL
shift_out	project_files/tx_uart.vhd	/^	SIGNAL	shift_out:		STD_LOGIC_VECTOR(10 downto 0) := (others => '0');$/;"	s	architecture:tx_uart.RTL
slow_clk	project_files/IceBreaker_top.vhd	/^	slow_clk: PROCESS(clk, rst)$/;"	Q	architecture:IceBreaker_top.RTL
slow_clk	project_files/MicrowavemontFPGA_top.vhd	/^	slow_clk: PROCESS(clk, rst)$/;"	Q	architecture:Microwavemont_top.RTL
slow_clk	project_files/TinyFPGA_top.vhd	/^	slow_clk: PROCESS(clk, rst)$/;"	Q	architecture:TinyFPGA_top.RTL
slowclk	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	slowclk			: STD_LOGIC := '0';$/;"	s	architecture:Microwavemont_top.RTL
sounder	project_files/MicrowavemontFPGA_top.vhd	/^		sounder		: OUT	STD_LOGIC;$/;"	q	entity:Microwavemont_top
su	project_files/cpu.vhd	/^	SIGNAL	su		: STD_LOGIC := '0';							-- 1 for ALU subraction (else addition)$/;"	s	architecture:cpu.RTL
system	project_files/system.vhd	/^ENTITY system IS$/;"	e
system_tb	project_files/system_tb.vhd	/^ENTITY system_tb IS$/;"	e
t_cyc	project_files/cpu.vhd	/^	SIGNAL	t_cyc:	t_cyc_t := T0;								-- current ucode step$/;"	s	architecture:cpu.RTL
t_cyc_t	project_files/cpu.vhd	/^	type t_cyc_t is (T0, T1, T2, T3, T4, T5);					-- ucode step type$/;"	t	architecture:cpu.RTL
to_bin	project_files/cpu.vhd	/^	function to_bin(sl : STD_LOGIC) return STRING is$/;"	f	architecture:cpu.RTL
to_bin	project_files/cpu.vhd	/^	function to_bin(uslv : UNSIGNED) return STRING is$/;"	f	architecture:cpu.RTL
trace_addr	project_files/cpu_trace.vhd	/^	SIGNAL	trace_addr	: UNSIGNED(9 downto 0);$/;"	s	architecture:cpu_trace.RTL
trace_busy	project_files/system.vhd	/^	SIGNAL	trace_busy		: STD_LOGIC := '0';$/;"	s	architecture:system.RTL
trace_data	project_files/cpu_trace.vhd	/^	SIGNAL	trace_data	: STD_LOGIC_VECTOR(6 downto 0); -- 7-bit ASCII$/;"	s	architecture:cpu_trace.RTL
trace_halt	project_files/cpu_trace.vhd	/^	SIGNAL	trace_halt	: STD_LOGIC;$/;"	s	architecture:cpu_trace.RTL
trace_rom	project_files/cpu_trace.vhd	/^	trace_rom: PROCESS (clk_i)$/;"	Q	architecture:cpu_trace.RTL
tx_busy	project_files/system.vhd	/^	SIGNAL	tx_busy			: STD_LOGIC := '0';$/;"	s	architecture:system.RTL
tx_busy_i	project_files/cpu_trace.vhd	/^		tx_busy_i	: IN	STD_LOGIC;$/;"	q	entity:cpu_trace
tx_data	project_files/system.vhd	/^	SIGNAL	tx_data			: STD_LOGIC_VECTOR(7 downto 0) := (others => '0');$/;"	s	architecture:system.RTL
tx_data_o	project_files/cpu_trace.vhd	/^		tx_data_o	: OUT	STD_LOGIC_VECTOR(7 downto 0);$/;"	q	entity:cpu_trace
tx_o	project_files/IceBreaker_top.vhd	/^	SIGNAL	tx_o		: STD_LOGIC := '0';	$/;"	s	architecture:IceBreaker_top.RTL
tx_o	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	tx_o		: STD_LOGIC := '0';	$/;"	s	architecture:Microwavemont_top.RTL
tx_o	project_files/TinyFPGA_top.vhd	/^	SIGNAL	tx_o		: STD_LOGIC := '0';	$/;"	s	architecture:TinyFPGA_top.RTL
tx_o	project_files/system.vhd	/^		tx_o		: OUT	STD_LOGIC;$/;"	q	entity:system
tx_o	project_files/tx_uart.vhd	/^		tx_o:	OUT STD_LOGIC;						-- TX pin output$/;"	q	entity:tx_uart
tx_uart	project_files/tx_uart.vhd	/^entity tx_uart is$/;"	e
tx_w	project_files/cpu_trace.vhd	/^	SIGNAL	tx_w		: STD_LOGIC;$/;"	s	architecture:cpu_trace.RTL
tx_write	project_files/system.vhd	/^	SIGNAL	tx_write		: STD_LOGIC := '0';$/;"	s	architecture:system.RTL
tx_write_o	project_files/cpu_trace.vhd	/^		tx_write_o	: OUT	STD_LOGIC;$/;"	q	entity:cpu_trace
ucode_cyc	project_files/cpu.vhd	/^	ucode_cyc: PROCESS(rst, clk, clk_en)$/;"	Q	architecture:cpu.RTL
user_btn	project_files/IceBreaker_top.vhd	/^	SIGNAL	user_btn	: STD_LOGIC := '0';$/;"	s	architecture:IceBreaker_top.RTL
user_btn	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	user_btn	: STD_LOGIC := '0';$/;"	s	architecture:Microwavemont_top.RTL
user_btn	project_files/TinyFPGA_top.vhd	/^	SIGNAL	user_btn	: STD_LOGIC := '0';$/;"	s	architecture:TinyFPGA_top.RTL
user_btn_ff	project_files/IceBreaker_top.vhd	/^	SIGNAL	user_btn_ff	: STD_LOGIC_VECTOR(1 downto 0) := "00";$/;"	s	architecture:IceBreaker_top.RTL
user_btn_ff	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	user_btn_ff	: STD_LOGIC_VECTOR(1 downto 0) := "00";$/;"	s	architecture:Microwavemont_top.RTL
user_btn_ff	project_files/TinyFPGA_top.vhd	/^	SIGNAL	user_btn_ff	: STD_LOGIC_VECTOR(1 downto 0) := "00";$/;"	s	architecture:TinyFPGA_top.RTL
val	project_files/cpu.vhd	/^		variable	val : UNSIGNED(8 downto 0) := (others => '0');	-- includes carry$/;"	v	process:cpu.RTL.alu
vled	project_files/MicrowavemontFPGA_top.vhd	/^	SIGNAL	vled		: STD_LOGIC_VECTOR(7 downto 0);			-- "virtual" LEDs multiplexed with 7-segment ont/;"	s	architecture:Microwavemont_top.RTL
we_i	project_files/ram.vhd	/^		we_i	: in	std_logic;$/;"	q	entity:RAM
we_i	project_files/tx_uart.vhd	/^		we_i:	IN	STD_LOGIC;						-- pulse high to send byte (when busy_o is low)$/;"	q	entity:tx_uart
write_i	project_files/ram.vhd	/^		write_i : in	std_logic_vector(datawidth-1 downto 0);$/;"	q	entity:RAM
zr	project_files/cpu.vhd	/^	SIGNAL	zr		: STD_LOGIC := '0';							-- zero flag register (set from ez when eo asserted)$/;"	s	architecture:cpu.RTL
